# Generated by Django 5.2.5 on 2025-08-29 00:55

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único usado em URLs públicas', unique=True, verbose_name='UUID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('user_type', models.CharField(choices=[('ADMIN', 'Administrador'), ('SELLER', 'Vendedor'), ('MANAGER', 'Gerente')], default='SELLER', help_text='Define o papel do usuário no sistema', max_length=10, verbose_name='Tipo de Usuário')),
                ('document', models.CharField(help_text='Apenas números', max_length=14, unique=True, verbose_name='CPF/CNPJ')),
                ('phone', models.CharField(blank=True, max_length=15, verbose_name='Telefone')),
                ('commission_rate', models.DecimalField(decimal_places=2, default=0.5, help_text='Percentual de comissão que este vendedor recebe (padrão: 0.5%)', max_digits=5, verbose_name='Taxa de Comissão (%)')),
                ('commission_active', models.BooleanField(default=True, help_text='Se desabilitado, este vendedor não receberá comissões', verbose_name='Comissão Ativa')),
                ('commission_start_date', models.DateField(blank=True, help_text='Data a partir da qual este vendedor começou a receber comissões', null=True, verbose_name='Início das Comissões')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'indexes': [models.Index(fields=['user_type', 'commission_active', 'is_active'], name='accounts_ac_user_ty_c41348_idx')],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
